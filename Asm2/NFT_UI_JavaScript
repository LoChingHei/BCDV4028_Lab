<!DOCTYPE html>
<html>
<head>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f5f5f5;
            margin: 0;
            padding: 0;
        }

        #header {
            background-color: #333;
            color: #fff;
            text-align: center;
            padding: 20px 0;
        }

        h1 {
            margin: 0;
        }

        #content {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            margin-top: 20px;
        }

        h2 {
            font-size: 20px;
            margin-top: 20px;
        }

        p {
            margin: 0;
        }

        #wallet-address {
            font-weight: bold;
        }

        #login-button {
            background-color: #333;
            color: #fff;
            border: none;
            padding: 10px 20px;
            cursor: pointer;
        }

        #login-button:hover {
            background-color: #555;
        }

        #ipfs-url {
            width: 100%;
            padding: 10px;
            margin-top: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        #mint-button {
            background-color: #333;
            color: #fff;
            border: none;
            padding: 10px 20px;
            cursor: pointer;
            margin-top: 10px;
        }

        #mint-button:hover {
            background-color: #555;
        }

        #mint-result {
            margin-top: 20px;
        }

        #mint-status {
            font-weight: bold;
        }

        #minted-nft {
            margin-top: 10px;
        }

        #nft-list {
            list-style: none;
            padding: 0;
        }
    </style>
</head>
<body>
    <div id="header">
        <h1>MetaMask NFT Minting & Viewer</h1>
    </div>
    <div id="content">
        <h2>MetaMask Wallet</h2>
        <p id="wallet-address">Wallet Address: <span id="address">Not logged in</span></p>
        <button id="login-button">Login with MetaMask</button>
        <h2>Mint Your NFT</h2>
        <input type="text" id="ipfs-url" placeholder="Enter IPFS URL">
        <button id="mint-button">Mint NFT</button>

        <h2>Your NFTs</h2>
        <ul id="nft-list"></ul>
        <div id="mint-result">
            <h2>Minting Result</h2>
            <p id="mint-status"></p>
            <p id="'minted-nft'"></p>
        </div>
        <h2>Check Your NFTs</h2>
        <button id="check-button">Check NFTs</button>
        <div id="nft-result"></div>
        <h2>Test</h2>
        <p id="Test"></p>
    </div>
   
    <script src="https://cdn.jsdelivr.net/npm/web3@1.3.6/dist/web3.min.js"></script>
    <script>
        //0xfA5907d41DCA9cC977a45fedD7b0DB6cE7011aE6
        const contractAddress = '0x2141eCAafBCEB53c2AeFe3601f963CdDFc30F857'; // NFT contract address
        const contractABI = []; // Here is the contract ABI, but the ABI is too long so I removed it. 
        // Show Logged Metamask.
        window.addEventListener('load', async () => {
            if (typeof window.ethereum !== 'undefined') {
                const accounts = await window.ethereum.request({ method: 'eth_accounts' });

                if (accounts.length > 0) {
                    document.getElementById('address').textContent = accounts[0];
                    
                // Initialize web3.js
                const web3 = new Web3(window.ethereum);

                // Initialize the contract
                const nftContract = new web3.eth.Contract(contractABI, contractAddress);

                // Fetch the user's NFTs
                const userNFTs = await nftContract.methods.tokensOfOwner(userAddress).call();

                // Display the user's NFTs
                const nftList = document.getElementById('nft-list');
                userNFTs.forEach((tokenId) => {
                    const listItem = document.createElement('li');
                    listItem.textContent = `NFT ID: ${tokenId}`;
                    nftList.appendChild(listItem);
                });
                }
            }
        });

        // Add a click event listener to the mint button
        document.getElementById('mint-button').addEventListener('click', async () => {
            try {
                const ipfsUrl = document.getElementById('ipfs-url').value;

                if (!ipfsUrl) {
                    alert('Please enter an IPFS URL.');
                    return;
                }

                const web3 = new Web3(window.ethereum);
                //call the contract with using the Contract address and ABI
                const nftContract = new web3.eth.Contract(contractABI, contractAddress);

                const accounts = await window.ethereum.request({ method: 'eth_accounts' });

                
                const senderAddress = accounts[0];
                //call the mint function in smart contract.
                const gas = await nftContract.methods.mintNFT(senderAddress, ipfsUrl).estimateGas();
                const result = await nftContract.methods.mintNFT(senderAddress, ipfsUrl).send({ from: senderAddress, gas });
                //console.log(result);

                //Showing minting result 
                document.getElementById('mint-status').textContent = 'NFT successfully minted!';
                document.getElementById('minted-nft').textContent = `Minted NFT with IPFS URL:${ipfsUrl}`;
            
        } catch (error) {
            console.error(error);
            document.getElementById('mint-status').textContent = error;
            document.getElementById('minted-nft').textContent = '';
        }
    });
        
        // As I am unable to display the NFTs, I added a function to check whether there are NFT present.  
        document.getElementById("check-button").addEventListener('click', async () =>{

            const web3 = new Web3(window.ethereum);
            const nftContract = new web3.eth.Contract(contractABI, contractAddress);
            const accounts = await window.ethereum.request({ method: 'eth_accounts' });
            const senderAddress = accounts[0];
            const nftBalance = await nftContract.methods.balanceGet(senderAddress).call();
            if (nftBalance > 0) {
                document.getElementById('Test').textContent = 'You Have NFT';
            } else {
                document.getElementById('Test').textContent = 'You Do Not Have NFT';
            }
            
        })
    </script>
</body>
</html>
